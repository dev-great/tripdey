# Generated by Django 5.0.6 on 2024-09-02 03:02

import cloudinary.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("authentication", "0003_rename_businesscategogy_businesscategory"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Amenities",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("tag", models.CharField(max_length=250)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "thumbnail",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-updated_on"],
            },
        ),
        migrations.CreateModel(
            name="CarModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=250)),
                (
                    "thumbnail",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-updated_on"],
            },
        ),
        migrations.CreateModel(
            name="CarType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=250)),
                (
                    "thumbnail",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-updated_on"],
            },
        ),
        migrations.CreateModel(
            name="DiscountOption",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=250)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-updated_on"],
            },
        ),
        migrations.CreateModel(
            name="Specifications",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("tag", models.CharField(max_length=250)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "thumbnail",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-updated_on"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("object_id", models.UUIDField()),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("review", models.TextField(db_index=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="ShortletListing",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("address", models.TextField()),
                ("landmark_1", models.TextField()),
                ("landmark_2", models.TextField()),
                ("landmark_3", models.TextField()),
                ("product_name", models.CharField(max_length=250)),
                ("product_description", models.TextField(blank=True, null=True)),
                (
                    "thumbnail_1",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "thumbnail_2",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "thumbnail_3",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "thumbnail_4",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "thumbnail_5",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "thumbnail_6",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                ("type_of_apartment", models.CharField(max_length=250)),
                ("utility_service_staffs", models.CharField(max_length=250)),
                ("max_guests", models.IntegerField()),
                (
                    "price_per_day",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("discount", models.CharField(max_length=250)),
                (
                    "discount_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "proof_of_ownership",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("LIVE", "LIVE"),
                            ("DRAFT", "DRAFT"),
                            ("PENDING", "PENDING"),
                        ],
                        default="PENDING",
                        max_length=50,
                    ),
                ),
                ("is_approved", models.BooleanField(default=False)),
                ("is_booked", models.BooleanField(default=False)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("amenities", models.ManyToManyField(to="listing.amenities")),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="authentication.userbusiness",
                    ),
                ),
                (
                    "discount_option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listing.discountoption",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("specification", models.ManyToManyField(to="listing.specifications")),
            ],
            options={
                "ordering": ["-updated_on"],
            },
        ),
        migrations.CreateModel(
            name="CarListing",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("address", models.TextField()),
                ("landmark_1", models.TextField()),
                ("landmark_2", models.TextField()),
                ("landmark_3", models.TextField()),
                ("product_name", models.CharField(max_length=250)),
                ("product_description", models.TextField(blank=True, null=True)),
                (
                    "thumbnail_1",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "thumbnail_2",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "thumbnail_3",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "thumbnail_4",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "thumbnail_5",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "thumbnail_6",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                ("is_driver", models.BooleanField(default=False)),
                (
                    "price_per_day",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("discount", models.CharField(max_length=250)),
                (
                    "discount_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "proof_of_ownership",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("LIVE", "LIVE"),
                            ("DRAFT", "DRAFT"),
                            ("PENDING", "PENDING"),
                        ],
                        default="PENDING",
                        max_length=50,
                    ),
                ),
                ("is_approved", models.BooleanField(default=False)),
                ("is_booked", models.BooleanField(default=False)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("amenities", models.ManyToManyField(to="listing.amenities")),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="authentication.userbusiness",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "car_model",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="listing.carmodel",
                    ),
                ),
                (
                    "type_of_car",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="listing.cartype",
                    ),
                ),
                (
                    "discount_option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listing.discountoption",
                    ),
                ),
                ("specification", models.ManyToManyField(to="listing.specifications")),
            ],
            options={
                "ordering": ["-updated_on"],
            },
        ),
    ]
